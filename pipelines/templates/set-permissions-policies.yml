parameters:
  - name : repository
    type: string
  - name: organizationUrl
    type: string
  - name: projectName
    type: string

steps:
  - bash: |
      set -euo pipefail

      echo "Setting permissions and policies for repository: ${{ parameters.repository }} on branch: $(targetBranch)"

      # === API Call - Find valid users ===
      NAMESPACE_ID="2e9eb7ed-3c0a-47d4-87c1-0ffdd275fd87" # Namespace ID for Git repositories
      SECURITY_TOKEN="repoV2/$(System.TeamProjectId)/$(Build.Repository.ID)/refs/heads/$(targetBranch)"
      API_URL="${{ parameters.organizationUrl }}/_apis/accesscontrollists/$NAMESPACE_ID?token=$SECURITY_TOKEN&api-version=7.1-preview.1&includeExtendedInfo=true"

      # echo "API URL: $API_URL"
      echo "Security Token: $SECURITY_TOKEN"
      # echo "Namespace ID: $NAMESPACE_ID"

      http_status=$(curl -sS -o response.json -w "%{http_code}" \
        -H "Authorization: Bearer $SYSTEM_ACCESSTOKEN" \
        -H "Content-Type: application/json" \
        "$API_URL" || echo "000")

      # === Bit values for each permission ===
      force_push_bit=16
      edit_policies_bit=4096
      bypass_pull_request_policies_bit=1024
      bypass_pushing_policies_bit=2048
      combined_permissions=$(( force_push_bit | edit_policies_bit | bypass_pull_request_policies_bit | bypass_pushing_policies_bit ))

      jq --argjson combined_permissions "$combined_permissions" '.value[0].acesDictionary |= with_entries(.value.deny = $combined_permissions)' response.json > updated.json

      echo "API Response: $(jq . response.json)"
      echo "API Response: $(jq . updated.json)"

      GIT_NAMESPACE_ID="2e9eb7ed-3c0a-47d4-87c1-0ffdd275fd87"
      BRANCH_TOKEN="repoV2/$(System.TeamProjectId)/$(Build.Repository.ID)/refs/heads/$(targetBranch)"
      SET_PERMISSIONS_API_URL="${{ parameters.organizationUrl }}${{ parameters.projectName }}/_apis/accesscontrollists/$GIT_NAMESPACE_ID?api-version=7.1-preview.1"

      echo "API URL: $SET_PERMISSIONS_API_URL"
      echo "Security Token: $BRANCH_TOKEN"

      # === API Call - Set permissions ===
      curl -sL \
        -X POST \
        -H "Authorization: Bearer $SYSTEM_ACCESSTOKEN" \
        -H "Content-Type: application/json" \
        "$SET_PERMISSIONS_API_URL" \
        -d "@updated.json"
    displayName: 'Set Repository permissions & policies'
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)