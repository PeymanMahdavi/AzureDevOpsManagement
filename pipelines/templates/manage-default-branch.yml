parameters:
  - name: repository
    type: string

jobs:
- job: CheckDefaultBranch
  displayName: 'Check Default Branch'
  condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
  steps:
  - checkout: none
  - template: get-default-branch.yml
    parameters:
      repository: ${{ parameters.repository }}
      organizationUrl: $(System.CollectionUri)
      projectName: $(System.TeamProject)
  - bash: |
        echo "##vso[task.setvariable variable=defaultBranch;isOutput=true]$(defaultBranch)"
    name: PublishDefaultBranchName

- job: CheckPermissions
  displayName: 'Check Permissions'
  dependsOn: CheckDefaultBranch
  condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
  variables:
    targetBranch: $[ dependencies.CheckDefaultBranch.outputs['PublishDefaultBranchName.defaultBranch'] ]
  steps:
  - checkout: none
  - template: get-branch-permissions.yml
    parameters:
      repository: ${{ parameters.repository }}
      organizationUrl: $(System.CollectionUri)
      projectName: $(System.TeamProject)
  - bash: |
        echo "##vso[task.setvariable variable=denyForcePushPermission;isOutput=true]$denyForcePushPermission"
        echo "##vso[task.setvariable variable=denyEditPoliciesPermission;isOutput=true]$denyEditPoliciesPermission"
        echo "##vso[task.setvariable variable=denyBypassPRPermission;isOutput=true]$denyBypassPRPermission"
        echo "##vso[task.setvariable variable=denyBypassPushPermission;isOutput=true]$denyBypassPushPermission"
    name: SetBranchPermissionsStatus

- job: CheckPolicies
  displayName: 'Check Policies'
  dependsOn: CheckDefaultBranch
  condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
  variables:
    targetBranch: $[ dependencies.CheckDefaultBranch.outputs['setDefaultBranch.defaultBranch'] ]
  steps:
  - checkout: none
  - template: get-branch-policies.yml
    parameters:
      repository: ${{ parameters.repository }}
      organizationUrl: $(System.CollectionUri)
      projectName: $(System.TeamProject)
  - bash: |
        echo "##vso[task.setvariable variable=isPolicyEnabled;isOutput=true]$isPolicyEnabled"
        echo "##vso[task.setvariable variable=minimumApproversPolicy;isOutput=true]$minimumApproversPolicy"
        echo "##vso[task.setvariable variable=resetApproveVotesPolicy;isOutput=true]$resetApproveVotesPolicy"
        echo "##vso[task.setvariable variable=resetRejectVotesPolicy;isOutput=true]$resetRejectVotesPolicy"
    name: SetBranchPliciesStatus